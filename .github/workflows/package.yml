name: Rust

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*
    # branches: ["cross-latest"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu	
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Build Dependencies
      shell: bash
      run: |
        curl -o flatbuffers.zip -sL https://github.com/google/flatbuffers/releases/download/v22.9.29/Linux.flatc.binary.clang++-12.zip
        unzip  flatbuffers.zip
        mv flatc /usr/local/bin
    - name: Install Protoc
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
    # - name: Cross compile 
    #   uses: taiki-e/setup-cross-toolchain-action@v1
    #   with:
    #     target: ${{ matrix.target }}
    # - run: cargo build --workspace --bins
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
  upload-assets:
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: cnosdb
          # (optional) Target triple, default is host triple.
          target: ${{ matrix.target }}
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
